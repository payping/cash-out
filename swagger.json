{
  "openapi": "3.0.1",
  "info": {
    "title": "Cash Out Public API",
    "description": "",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.payping.ir/"
    }
  ],
  "paths": {
    "/v1/cash-out/overview": {
      "get": {
        "tags": [
          "CashOut"
        ],
        "summary": "Return overview of user cash-out",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverviewResult"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-out/deposit": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "Create a deposit with id to increase user's balance",
        "description": "Create a deposit- with- id to increase user’s balance In the input model,\r\nthere is a field called NotifyUrl.We need this field to return the transaction result to it after registering the information.The returned information includes:\r\n\r\n **Amount, DepositId, DepositLocalTimestamp, TransactionNumber, BankReference**\r\n\r\nNote: you should implement a POST API and set its url to NotifyUrl, so that our webhook can call it. Note: If this address is not valid, you will receive an error.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepositVM"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepositVM"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepositVM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositDetailsVM"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchRequestError"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Return list of deposits with id for user with complete filtering and queryable.",
        "description": " You can filter your list by:\r\n\r\n code, depositId, isLegal, createdOn, businessNationalId, nationalCode\r\n\r\n **Note: Filter and OrderBy are case sensitive:**\r\n\r\n for example:\r\n\r\n<code>\r\n  ّFilter=Code='xyZ158' is wrong\r\n  ّFilter=code='xyZ158' is correct\r\n</code>\r\n\r\n\r\n**Notes about the filter:**\r\n\r\nIf you want to search the whole phrase\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = 'Jon Smith'\r\n</code>\r\n\r\nIf you want to search for part of the phrase:\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = *'Jon'\r\n</code>\r\n\r\nIf you want to use And - Or operator\r\n\r\nFor example: filter all records with status equal to 3 and code equal to p7MM4\r\n\r\n<code>\r\nstatus = 3, code= p7MM4\r\n</code>\r\n\r\nFor example: filter all records with status equal to 3 or code equal to p7MM4\r\n\r\n <code>\r\nstatus = 3 | code = p7MM4\r\n</code>",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositDetailsVMPaging"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-out/deposit/provider-deposit-iban": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Return deposit IBAN, Account holder,Bank name, Account number",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepositIbanDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-out/requests": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Public api for customer to submit a request containing a list of settlements.",
        "description": "In the input model, there is a field called NotifyUrl.We need this field to return the transaction result to it. The returned information includes:\r\n **ClientTransferReference, ServerTransferReference, BankTransferReference, Status, RequestedTransferType, LastEffectiveTransferType**",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchRequestError"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Return list of cash-out requests with complete filtering and queryable",
        "description": "You can filter your list by:\r\n\r\n code, createdOn, totalAmount, status, title, transferType\r\n\r\n **Note: Filter and OrderBy are case sensitive:**\r\n\r\n for example:\r\n\r\n<code>\r\n  ّFilter=Code='xyZ158' is wrong\r\n  ّFilter=code='xyZ158' is correct\r\n</code>\r\n\r\n\r\n**Notes about the filter:**\r\n\r\nIf you want to search the whole phrase\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = 'Jon Smith'\r\n</code>\r\n\r\nIf you want to search for part of the phrase:\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = *'Jon'\r\n</code>\r\n\r\nIf you want to use And - Or operator\r\n\r\nFor example: filter all records with status equal to 3 and code equal to p7MM4\r\n\r\n<code>\r\nstatus = 3, code= p7MM4\r\n</code>\r\n\r\nFor example: filter all records with status equal to 3 or code equal to p7MM4\r\n\r\n <code>\r\nstatus = 3 | code = p7MM4\r\n</code>",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsVMPaging"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cash-out/requests/settlements": {
      "get": {
        "tags": [
          "Settlement"
        ],
        "summary": "Return list of settlements for with complete filtering and queryable",
        "description": "You can filter your list by:\r\n\r\n code, amount, destinationBank, iban, bankTransferReference,\r\n createdOn, modifiedOn-, status, clientRefId, mobile, nationalId, fullName\r\n\r\n **Note: Filter and OrderBy are case sensitive:**\r\n\r\n for example:\r\n\r\n<code>\r\n  ّFilter=Code='xyZ158' is wrong\r\n  ّFilter=code='xyZ158' is correct\r\n</code>\r\n\r\n\r\n**Notes about the filter:**\r\n\r\nIf you want to search the whole phrase\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = 'Jon Smith'\r\n</code>\r\n\r\nIf you want to search for part of the phrase:\r\n\r\n<code>\r\nFor example: FullName\r\nFilter = FullName = *'Jon'\r\n</code>\r\n\r\nIf you want to use And - Or operator\r\n\r\nFor example: filter all records with status equal to 3 and code equal to p7MM4\r\n\r\n<code>\r\nstatus = 3, code= p7MM4\r\n</code>\r\n\r\nFor example: filter all records with status equal to 3 or code equal to p7MM4\r\n\r\n <code>\r\nstatus = 3 | code = p7MM4\r\n</code>",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettlementFullDetailsVMPaging"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchRequest": {
        "required": [
          "settlements",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "notifyUrl": {
            "type": "string",
            "nullable": true
          },
          "transferType": {
            "$ref": "#/components/schemas/TransferType"
          },
          "about": {
            "$ref": "#/components/schemas/SettlementAboutType"
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchSettlementVM"
            }
          }
        },
        "additionalProperties": false
      },
      "BatchRequestError": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchResult": {
        "type": "object",
        "properties": {
          "requestCode": {
            "type": "string",
            "nullable": true
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchSettlementDetailsVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchSettlementDetailsVM": {
        "type": "object",
        "properties": {
          "settlementCode": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchSettlementVM": {
        "required": [
          "amount",
          "clientRefId",
          "fullName",
          "iban"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "iban": {
            "type": "string"
          },
          "description": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string"
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateDepositVM": {
        "type": "object",
        "properties": {
          "isLegal": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "businessNationalId": {
            "type": "string",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "notifyUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRequestResultVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettlementDetailsVM"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSettlementErrorVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSettlementErrorVM": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "errorDesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSettlementVM": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "nationalId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositDetailsVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "depositId": {
            "type": "string",
            "nullable": true
          },
          "isLegal": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "businessNationalId": {
            "type": "string",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DepositDetailsVMPaging": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepositDetailsVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepositIbanDto": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "accountHolder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DestinationBank": {
        "enum": [
          "Mellat=0 ",
          "Keshavarzi=1 ",
          "Melli=2 ",
          "Tejarat=3 ",
          "Saderat=4 ",
          "Parsian=5 ",
          "Saman=6 ",
          "Pasargad=7 ",
          "Shahr=8 ",
          "Ayande=9 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "EzNotifyDepositResult": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "depositId": {
            "type": "string",
            "nullable": true
          },
          "depositLocalTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "transactionNumber": {
            "type": "string",
            "nullable": true
          },
          "bankReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EzNotifyResult": {
        "type": "object",
        "properties": {
          "clientTransferReference": {
            "type": "string",
            "nullable": true
          },
          "serverTransferReference": {
            "type": "integer",
            "format": "int64"
          },
          "bankTransferReference": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "requestedTransferType": {
            "type": "string",
            "nullable": true
          },
          "lastEffectiveTransferType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OverviewResult": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "format": "double"
          },
          "withdrawableBalance": {
            "type": "number",
            "format": "double"
          },
          "totalWithdraw": {
            "type": "number",
            "format": "double"
          },
          "isDepositActivate": {
            "type": "boolean"
          },
          "hasUnknown": {
            "type": "boolean"
          },
          "excelURL": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestDetailsVM": {
        "type": "object",
        "properties": {
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "totalWage": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "failedCount": {
            "type": "integer",
            "format": "int32"
          },
          "succeededCount": {
            "type": "integer",
            "format": "int32"
          },
          "inProgressCount": {
            "type": "integer",
            "format": "int32"
          },
          "submittedTime": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestDetailsVMPaging": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestDetailsVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestStatus": {
        "enum": [
          "InComplete=0 ",
          "Draft=1 ",
          "Schedule=2 ",
          "Final=3 ",
          "Unknown=4 ",
          "Failed=5 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "SettlementAboutType": {
        "enum": [
          "Other=0 ",
          "Salary=1 ",
          "Insurance=2 ",
          "Health=3 ",
          "Investment=4 ",
          "Currency=5 ",
          "Retirement=6 ",
          "Movable=7 ",
          "Immovable=8 ",
          "CashManagement=9 ",
          "Customs=10 ",
          "Tax=11 ",
          "OtherGovernment=12 ",
          "Facilities=13 ",
          "Guarantee=14 ",
          "Daily=15 ",
          "Charity=16 ",
          "Commodity=17 ",
          "Services=18 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "SettlementDetailsVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "wage": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "destinationBank": {
            "$ref": "#/components/schemas/DestinationBank"
          },
          "persianBankName": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SettlementFullDetailsVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "wage": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "requestCode": {
            "type": "string",
            "nullable": true
          },
          "destinationBank": {
            "$ref": "#/components/schemas/DestinationBank"
          },
          "persianBankName": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "bankTransferReference": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/SettlementStatus"
          },
          "transferType": {
            "$ref": "#/components/schemas/TransferType"
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          },
          "nearestACHTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "submittedTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SettlementFullDetailsVMPaging": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettlementFullDetailsVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SettlementStatus": {
        "enum": [
          "InComplete=0 ",
          "FAILED=1 ",
          "IN_PROGRESS=2 ",
          "TRANSFERRED=3 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "SubmitRequestResultVM": {
        "type": "object",
        "properties": {
          "settlementCode": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionDetailVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransactionDetailVMPaging": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDetailVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionType": {
        "enum": [
          "Input=0 ",
          "Output=1 ",
          "InputWage=2 ",
          "OutputWage=3 ",
          "ManualInput=4 ",
          "ManualOutput=5 ",
          "DepositInput=6 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransferType": {
        "enum": [
          "AUTO=0 ",
          "NORMAL=1 ",
          "ACH=2 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "TwoStepType": {
        "enum": [
          "SMS=0 ",
          "GoogleAuthenticator=1 "
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateSettlementVM": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "clientRefId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}